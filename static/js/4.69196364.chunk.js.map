{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/addMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","src","NavLink","to","name","Message","message","maxLength100","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElement","dialogs","map","d","key","messagesElement","messages","m","newMessageBody","dialogsItems","values","sendMessage","compose","connect","isAuth","auth","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,OAAS,wBAAwB,QAAU,2B,gGCgBpMC,EAZI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,yBAAKC,IAAI,wEACT,kBAACC,EAAA,EAAD,CAASC,GAAIP,GAAOD,EAAMS,QCWvBC,EAjBC,SAACV,GAGb,OACI,6BAEI,6BACI,yBAAKG,UAAWC,IAAEC,QAASL,EAAMW,Y,kCCN3CC,EAAgBC,YAAiB,KAmB1BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAlBZ,SAACf,GACpB,OACI,0BAAMiB,SAAUjB,EAAMkB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXZ,KAAK,iBACLa,YAAY,qBACZC,SAAU,CAACC,IAAUZ,MAIhC,6BACI,6CCyBDa,EAjCC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAE7B,GAAIA,GAAI6B,EAAE7B,QACnF+B,EAAkBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASqB,IAAKG,EAAEjC,QAC7DwB,EAAMU,eAO3B,OAEI,yBAAKjC,UAAWC,IAAEyB,SACd,yBAAK1B,UAAWC,IAAEiC,cACbT,GAEL,yBAAKzB,UAAWC,IAAE8B,UACd,6BAAMD,GACN,6BACI,kBAACnB,EAAD,CAAqBG,SAbjB,SAACqB,GACjBtC,EAAMuC,YAAYD,EAAOF,uB,wBCIlBI,sBACXC,aAhBkB,SAACf,GACnB,MAAO,CACHC,YAAaD,EAAMC,YACnBe,OAAQhB,EAAMiB,KAAKD,WAIF,SAACE,GACtB,MAAO,CACHL,YAAa,SAACH,GACVQ,EAASC,YAAmBT,SAOpCU,IAFWN,CAGbf","file":"static/js/4.69196364.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1x03a\",\"dialogsItems\":\"Dialogs_dialogsItems__3yH9n\",\"active\":\"Dialogs_active__2b6vo\",\"messages\":\"Dialogs_messages__1RoEA\",\"dialog\":\"Dialogs_dialog__2uqo9\",\"message\":\"Dialogs_message__tffIz\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src='http://gloria-mur.ru/wp-content/uploads/2017/05/avatar1-740x463.jpg' />\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                <div className={s.dialog}>{props.message}</div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength100 =  maxLengthCreator(100);\r\nconst addMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name=\"newMessageBody\"\r\n                       placeholder=\"Enter your message\"\r\n                       validate={[required, maxLength100]}\r\n\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport const AddMessageReduxForm = reduxForm({form: \"dialogAddMessageForm\"})(addMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {AddMessageReduxForm} from \"./AddMessageForm/addMessageForm\";\r\nimport {maxLengthCreator} from \"../../utils/validators/validators\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    debugger\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElement = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElement = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {   //функция, которая отправляет в store через textarea(без неё не вводится в поле)//e-объект события\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n                <div>\r\n                    <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\nexport default Dialogs;\r\n\r\n\r\n","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n\r\n\r\n"],"sourceRoot":""}