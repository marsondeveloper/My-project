{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","style","marginBottom","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","s","contact","ProfileData","goToEditMode","isOwner","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Post","item","message","likesCounter","maxLength10","maxLengthCreator","MyPosts","React","memo","postsElements","posts","p","likesCount","id","createRef","postsBlock","AddNewPostRedux","values","addPost","newPostText","Field","component","name","validate","required","placeholder","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.2bbda77c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__bbxo5\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2B0kc\",\"contact\":\"ProfileInfo_contact__2ozxw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3FH-B\",\"posts\":\"MyPosts_posts__18BlE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2ZgvS\"};","import React, {useState, useEffect} from 'react';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activatedEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n   const deactivatedEditMode = () => {\r\n       setEditMode(false);\r\n       props.updateStatus(status);\r\n    };\r\n\r\n   const onStatusChange = (e) => {\r\n       setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div style={{marginBottom: 40}}>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b><span  onDoubleClick={activatedEditMode}>{props.status || \"----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true}  onBlur={deactivatedEditMode}\r\n                  value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n\r\n        <div>\r\n            <button>Save</button>\r\n        </div>\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional</b> : {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key}>\r\n                <b>{key}</b> : {createField(key, \"contacts.\" + key, [], Input)}\r\n            </div>\r\n        })}\r\n        </div>\r\n\r\n    </form>\r\n};\r\n\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/personal-user-illustration-@2x.png';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({profile, isOwner, status, updateStatus, savePhoto, saveProfile}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onSubmit =  (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        })\r\n\r\n    };\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length){\r\n           savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n                {editMode ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/> :\r\n                    <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={profile} isOwner={isOwner}/>}\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n};\r\n\r\nconst ProfileData = ({profile, goToEditMode, isOwner}) => {\r\n    return <div>\r\n\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>Edit</button>\r\n        </div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b> : {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n\r\n    </div>\r\n\r\n};\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n\r\n        <div className={s.item}>\r\n            <img\r\n                src='https://thumbs-prod.si-cdn.com/_VhkN5w-2-OtQhT4Bq1EVIW55zg=/800x600/filters:no_upscale()/https://public-media.si-cdn.com/filer/20/d1/20d1d85c-6aa1-4cd9-94ff-8061f9a7baaa/avatar-therapy-early-trial-results-very-encouraging-20171123-600x600.jpg'/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like</span>\r\n                {props.likesCounter}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 =  maxLengthCreator(10);\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCounter={p.likesCount}\r\n                                                   key={p.id}/>);\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.postsBlock}>\r\n                <h3>My post</h3>\r\n            </div>\r\n            <div>\r\n                <AddNewPostRedux onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst addNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\"\r\n                       validate={[required, maxLength10]} placeholder={\"Post message\"}/>\r\n            </div>\r\n            <div>\r\n                <button>Add posts</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddNewPostRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(addNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n      return {\r\n          posts: state.profilePage.posts,\r\n          newPostText: state.profilePage.newPostText\r\n      }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\n\r\n\r\nconst Profile = (props) =>  {\r\n\r\n        return (\r\n            <div>\r\n                <ProfileInfo isOwner={props.isOwner}\r\n                             profile={props.profile}\r\n                             status={props.status}\r\n                             updateStatus={props.updateStatus}\r\n                             savePhoto={props.savePhoto}\r\n                             saveProfile={props.saveProfile}/>\r\n                <MyPostsContainer />\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     saveProfile={this.props.saveProfile}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n               profile: state.profilePage.profile,\r\n               status: state.profilePage.status,\r\n               authorizedUserId: state.auth.userId,\r\n               isAuth: state.auth.isAuth\r\n           })\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, saveProfile, savePhoto}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n"],"sourceRoot":""}